# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 7 * * *"

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Check style
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8
          flake8 --max-line-length=89
  build:
    needs: style
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install OCRed
        run: |
          python -m pip install .

      - name: Install Tesseract OCR Engine on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install tesseract-ocr

      - name: Install Tesseract OCR Engine on MacOS
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install tesseract-lang

      - name: Cache Tesseract installed through vcpkg on Windows
        if: matrix.os == 'windows-latest'
        uses: actions/cache@v2
        env:
          cache-name: vckpg_binary_cache
        with:
          path: C:\Users\runneradmin\AppData\Local\vcpkg\archives
          key: ${{ runner.os }}-build-VS2022-${{ env.cache-name }}-${{ hashFiles('vcpkg*.json') }}

      - name: Run unit tests and generate coverage report
        run: |
          python -m pip install coverage
          coverage run -m unittest -v

      - name: Upload coverage report
        uses: codecov/codecov-action@v2.1.0
